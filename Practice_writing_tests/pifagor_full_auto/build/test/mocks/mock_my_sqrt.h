/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MY_SQRT_H
#define _MOCK_MY_SQRT_H

#include "unity.h"
#include "my_sqrt.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_my_sqrt_Init(void);
void mock_my_sqrt_Destroy(void);
void mock_my_sqrt_Verify(void);




#define my_sqrt_IgnoreAndReturn(cmock_retval) my_sqrt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void my_sqrt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, double cmock_to_return);
#define my_sqrt_StopIgnore() my_sqrt_CMockStopIgnore()
void my_sqrt_CMockStopIgnore(void);
#define my_sqrt_ExpectAndReturn(x, cmock_retval) my_sqrt_CMockExpectAndReturn(__LINE__, x, cmock_retval)
void my_sqrt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, double x, double cmock_to_return);
typedef double (* CMOCK_my_sqrt_CALLBACK)(double x, int cmock_num_calls);
void my_sqrt_AddCallback(CMOCK_my_sqrt_CALLBACK Callback);
void my_sqrt_Stub(CMOCK_my_sqrt_CALLBACK Callback);
#define my_sqrt_StubWithCallback my_sqrt_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
